How negative value stored in binary
 --------------------------------------------
 sihned char ch=-2;
 2's complement  method = 1's complement +1
 
 0000 0000
 0000 0010 = 2
 1111 1101 = 1's complement of 2
+        1
==================
 1111 1110   = -2

-125 , +130 , 200


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   					
   						0.....................+127    = 256-127 =>> 129 
   						
  (129 -1)= -128...............................0


   		
	Size = 1byte
	Min  = -128
	Max  = +127
	Range = -128 to +127
      
===================================================================
2.How We are storing Negative numbers in memory?



	signed char ch= -1

	0000 0001 =  ablsolute form of -1
	
	1111 1110 = 1's complement of (-1)
      +
       0000 0001 = add 1
       =================
       1111 1111 =  -1
       
       
 Experiment =:
 
 
 signed char ch= 255
 
 
 
       ch = 0x10000004  memory location stores 1111 1111
          
=============================================================================================
05_
Date -: 09/02/2022
----------------------- 
 
 
 
 130-
 
 
       	0.....................+127
       	
       	
	-128 -127 -126 -125 -124...........-1...0........127
	
													  127	
	 128  129  130  131   132  ........255 256 
	

Ex-1
=====
unsigned char ch=-5;


1111 1011

5 = 0000 0101
    1111 1010
+           1
==================
	1111 1011 = -5
	
	
format specifier
-------------------

  %c - char 
  %d  - positive/negative number 
  %x  - hex value
  %u  -unsigned value
  %o  - octol
  %p  - address represent
  
  
  ex-:
  ----#include <stdio.h>

int main()
{
    //signed char ch=129;
   // unsigned char ch=129;
    unsigned char ch=65;
    printf("Hello World\n");
    printf("address=%u  Value=%d char=%c\n octol=%o hexa=%x\n",&ch,ch,ch,ch,ch);

    return 0;
}
--------------------------

Integer-:

Size-:4 byte(32)
min-:
max -:

0000 0000	0000 0000	0000 0000	0000 0000= min
1111 1111   1111 1111	1111 1111	1111 1111= Max 2^32 -1


1 byte =

1024b = 1KB
1024k = 1mb = 2^10

2^32 = 2 x 2 x 2^30 = 4x 2^30 = 4G

char ch =5

0000 0101 =5

0000 0000	0000 0000	0000 0000	0000 0101 = 5
 0     0     0    0      0     0      0   5   =0x00000005
 
 unsigned int a= -2
 
 
0000 0000	0000 0000   0000 0000  0000 0010  = 2	 
1111 1111   1111 1111   1111 1111  1111 1101   =  1ns complement of 2
+                                          1   = adding one
=============================================================
1111 1111   1111 1111   1111 1111  1111 1110   = -2
